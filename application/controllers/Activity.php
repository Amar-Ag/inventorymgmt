<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Activity extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Activity_model');
        $this->load->model('Destination_model');
        $this->load->library('session');
        if ($this->session->userdata('UserType') == '') {
            redirect('/');
        }
        if ($this->session->userdata('UserType') == '2') {
            redirect('/');
        }
    }

    /*
     * Listing of activities
     */
    function index()
    {
        $data['activities'] = $this->Activity_model->get_all_activities();
        $data['destination'] = $this->Destination_model->get_all_destination();
        $data['_view'] = 'activity/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new activity
     */
    function add()
    {
        $rDate = date("Y-m-d");
        $data['destination'] = $this->Destination_model->get_all_destination();
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'DestinationId' => $this->input->post('DestinationId'),
                'ActivityTitle' => $this->input->post('ActivityTitle'),
                'IsActive' => 1,
                'ChildFriendly' => $this->input->post('childFriendly'),
                'Romantic' => $this->input->post('romantic'),
                'ElderFriendly' => $this->input->post('elderFriendly'),
                'Culture' => $this->input->post('culture'),
                'Outdoor' => $this->input->post('outdoors'),
                'CreatedBy' => $this->session->userdata('UserId'),
                'ActivityDescription' => $this->input->post('ActivityDescription'),
            );


            $activity_id = $this->Activity_model->add_activity($params);
            redirect('activity/index');
        } else {
            $data['_view'] = 'activity/add';
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a activity
     */
    function edit($AcitivityId)
    {
        // check if the activity exists before trying to edit it
        $data['activity'] = $this->Activity_model->get_activity($AcitivityId);
        $data['destination'] = $this->Destination_model->get_all_destination();

        if (isset($data['activity']['AcitivityId'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'DestinationId' => $this->input->post('DestinationId'),
                    'ActivityTitle' => $this->input->post('ActivityTitle'),
                    'IsActive' => $this->input->post('IsActive'),
                    'ActviityPreferences' => $this->input->post('ActviityPreferences'),
                    'CreatedBy' => $this->input->post('CreatedBy'),
                    'ActivityDescription' => $this->input->post('ActivityDescription'),
                );

                $this->Activity_model->update_activity($AcitivityId, $params);
                redirect('activity/index');
            } else {
                $data['_view'] = 'activity/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The activity you are trying to edit does not exist.');
    }

    /*
     * Deleting activity
     */
    function remove($AcitivityId)
    {
        $activity = $this->Activity_model->get_activity($AcitivityId);

        // check if the activity exists before trying to delete it
        if (isset($activity['AcitivityId'])) {
            $this->Activity_model->delete_activity($AcitivityId);
            redirect('activity/index');
        } else
            show_error('The activity you are trying to delete does not exist.');
    }

}
